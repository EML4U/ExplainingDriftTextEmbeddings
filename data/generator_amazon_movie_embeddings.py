# Copied from https://github.com/EML4U/Clustering/blob/1bebd2e9febec60245cc2ef66a5324b9dcd9497e/generator_amazon_movie_embeddings.py
# Author: https://github.com/Slothologist
import os
import sys
import pickle
from datetime import datetime, timedelta
import time
import random
random.seed(42)
import re
import yaml



modes = ['bert_768', 'bow_50', 'bow_768']
if len(sys.argv) < 2 or sys.argv[1] not in modes:
    print('Need mode {mode} as parameter!'.format(mode=modes))
    exit(1)

mode = sys.argv[1]

# amazon_raw_file    generated by amazon_movie_sorter.py
# gensim_model_file  available at https://hobbitdata.informatik.uni-leipzig.de/EML4U/2021-05-17-Amazon-Doc2Vec/
#                    generated by word2vec/doc2vec.py
# embeddings_file    is to be generated here
amazon_raw_file   = 'data/clustering/amazon_raw.pickle'
gensim_model_50_file  = 'data/movies/amazonreviews_50/amazonreviews_d.model'
gensim_model_768_file = 'data/movies/amazonreviews_768/amazonreviews_e.model'
bert_model = 'data/movies/movie_9e'
embeddings_file   = 'data/clustering/amazon_{mode}.pickle'.format(mode=mode)


## Embed everything, save in chunks so the memory doesn't explode

# Configure model to use by mode
if(mode == "bert_768"):
    from embedding import BertHuggingface
    bert = BertHuggingface(5, batch_size=8)
    bert.load(bert_model)
    embed = bert.embed
elif(mode == "bow_50"):
    print("gensim_model_50_file", gensim_model_50_file)
    from classes.doc_to_vec import DocToVec
    word2vec = DocToVec()
    word2vec.load_model(gensim_model_50_file)
    embed = word2vec.embed
elif(mode == "bow_768"):
    print("gensim_model_768_file", gensim_model_768_file)
    from classes.doc_to_vec import DocToVec
    word2vec = DocToVec()
    word2vec.load_model(gensim_model_768_file)
    embed = word2vec.embed
else:
    raise ValueError("Unknown mode " + mode)

with open(amazon_raw_file, 'rb') as handle:
    texts, keys = pickle.load(handle)

if os.path.isfile(embeddings_file):  # Do not overwrite
    print("Embeddings file already exists, exiting.", embeddings_file)
    exit()
    
# gather amazon reviews of the fourth year onwards only
data = [x for x in list(zip(texts, keys)) if x[1][-3].year >= 2000]    
    
embeddings = []
e_keys = []

emb_texts, emb_keys = [list(t) for t in zip(*data)]
embeddings = embed(emb_texts)

dump_data = {'data': (embeddings, emb_keys)}
    
with open(embeddings_file, 'wb') as handle:
    pickle.dump(dump_data, handle)
